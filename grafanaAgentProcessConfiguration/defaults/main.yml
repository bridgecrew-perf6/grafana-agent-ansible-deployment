---
# ansible_architecture
grafana_agent_type:
  x86_64: amd64
  armv7l: armv7
  aarch64: arm64
promtail_type:
  x86_64: amd64
  armv7l: arm
  aarch64: arm64
#agent_location: /usr/local/bin
service_id: grafana-agent
service_gid: grafana-agent
agent_location: /opt/grafana/agent
config_location: /opt/grafana/agent
promtail_location: /opt/promtail
install_unzip: true
systemd_service_folder: /etc/systemd/system
grafana_location: us-central1
grafana_location_prometheus: "{{ grafana_location }}"
grafana_location_promtail: "{{ grafana_location }}"
grafana_agent_config_template: agent-config.yaml.j2
grafana_agent_systemd_template: grafana-agent.service.j2
grafana_promtail_config_template: promtail-config.yaml.j2
grafana_promtail_systemd_template: promtail.service.j2


process_exporter_config_part1:
  process_exporter:
    enabled: true
    metric_relabel_configs:
      - source_labels: [__name__]
        regex: 'namedprocess_namegroup_context_switches_total|namedprocess_namegroup_major_page_faults_total|namedprocess_namegroup_minor_page_faults_total|namedprocess_namegroup_oldest_start_time_seconds|namedprocess_namegroup_read_bytes_total|namedprocess_namegroup_thread_context_switches_total|namedprocess_namegroup_thread_io_bytes_total|namedprocess_namegroup_thread_major_page_faults_total|namedprocess_namegroup_thread_minor_page_faults_total|namedprocess_namegroup_threads_wchan|namedprocess_namegroup_worst_fd_ratio|namedprocess_namegroup_write_bytes_total'
        action: drop
      - source_labels: [state]
        regex: 'Sleeping|Waiting|Other'
        action: drop
    process_names:

process_exporter_config_part2:
  recheck_on_scrape: true
  scrape_integration: ${GRAFANA_PROCESS_EXPORTER_SCRAPE_ENABLE:-true}

log_config:
  logs:
    configs:
    - clients:
        - url: http://loki.aiops.wwtatc.local:3100/loki/api/v1/push
      name: ${HOSTNAME}
      positions:
        filename: /tmp/positions.yaml
      scrape_configs:

# ansible.aiops.wwtatc.local

ansible.aiops.wwtatc.local:
  - "grafana_monitoring"
  - "prometheus_monitoring"
  - "loki_monitoring"

proc_ansible.aiops.wwtatc.local:
  - "grafanaserver"
  - "prometheusserver"
  - "grafanaagent"

# open-telemetry.aiops.wwtatc.local

open-telemetry.aiops.wwtatc.local:
  - "app111"
  
proc_open-telemetry.aiops.wwtatc.local:
  - "grafanaagent"

# grafana.aiops.wwtatc.local

grafana.aiops.wwtatc.local:
  - "grafana_monitoring"
  - "prometheus_monitoring"

proc_grafana.aiops.wwtatc.local:
  - "grafanaserver"
  - "prometheusserver"
  - "grafanaagent"

# loki.aiops.wwtatc.local

loki.aiops.wwtatc.local:
  - "loki_monitoring"

proc_loki.aiops.wwtatc.local:
  - "lokiserver"
  - "alertmanagerserver"
  - "temposerver"
  - "grafanaagent"

# eshop.aiops.wwtatc.local

eshop.aiops.wwtatc.local:
  - "eshop_nginx"

proc_eshop.aiops.wwtatc.local:
  - "nginx_worker_process"
  - "nginx_master_process"
  - "nginx_cache_manager_process"
  - "grafanaagent"

# webshop.aiops.wwtatc.local

webshop.aiops.wwtatc.local:

proc_webshop.aiops.wwtatc.local:
  - "grafanaagent"

# Log monitoring

app_eshop_nginx:
  - job_name: eshop-nginx
    static_configs:
    - labels:
        __path__: /var/log/nginx/*log
        application: eshop
        agent_hostname: ${HOSTNAME}
      targets:
      - ${HOSTNAME}

app_grafana_monitoring:
  - job_name: grafana-logs
    static_configs:
    - labels:
        __path__: /opt/grafana/logs/grafana/grafana.log
        application: grafana
        agent_hostname: ${HOSTNAME}
      targets:
      - ${HOSTNAME}

app_prometheus_monitoring:
  - job_name: prometheus-logs
    static_configs:
    - labels:
        __path__: /opt/grafana/logs/prometheus/prometheus.log
        application: prometheus
        agent_hostname: ${HOSTNAME}
      targets:
      - ${HOSTNAME}

app_loki_monitoring:
  - job_name: loki-logs
    static_configs:
    - labels:
        agent_hostname: ${HOSTNAME}
        __path__: /opt/grafana/logs/loki/loki.log
        application: loki
      targets:
      - ${HOSTNAME}

app_alert_manager_monitoring:
  - job_name: alertmanager-logs
    static_configs:
    - labels:
        agent_hostname: ${HOSTNAME}
        __path__: /opt/grafana/logs/alertmanager/alertmanager.log
        application: alertmanager
      targets:
      - ${HOSTNAME}

app_tempo_logs_monitoring:
  - job_name: tempo-logs
    static_configs:
    - labels:
        agent_hostname: ${HOSTNAME}
        __path__: /opt/grafana/logs/tempo/tempo.log
        application: tempo
      targets:
      - ${HOSTNAME}

# Process Monitoring

proc_nginx_worker_process:
  - cmdline:
    - 'nginx: worker process'
    name: nginx_worker_process

proc_nginx_master_process:
  - cmdline:
    - 'nginx: master process'
    name: nginx_master_process

proc_nginx_cache_manager_process:
  - cmdline:
    - 'nginx: cache manager process'
    name: nginx_cache_manager_process

proc_grafanaserver:
  - cmdline:
    - /opt/grafana/grafana/bin/grafana-server
    name: grafana-server

proc_prometheusserver:
  - cmdline:
    - '/opt/grafana/prometheus/prometheus'
    name: prometheus

proc_lokiserver:
  - cmdline:
    - '/opt/grafana/loki/loki-linux-amd64'
    name: loki

proc_alertmanagerserver:
  - cmdline:
    - '/opt/grafana/alertmanager/alertmanager'
    name: alertmanager

proc_temposerver:
  - cmdline:
    - '/opt/grafana/tempo/tempo'
    name: tempo

proc_grafanaagent:
  - cmdline:
    - /opt/grafana/agent/agent-linux-amd64
    name: grafana-agent
